import flixel.FlxG;
import funkin.graphics.FunkinSprite;
import funkin.modding.module.Module;
import funkin.Paths;
import funkin.play.PlayState;
import flixel.tweens.FlxTween;
import flixel.tweens.FlxEase;
import funkin.FunkinMemory;

class ExpurgationSign extends Module
{
	static var signsArray:Array<FunkinSprite> = [];

	public function new()
	{
		super("ExpurgationSign");
	}

	public function appear(signType:Int = 0, flipX:Bool = false):Void
	{
		var sign:FunkinSprite = FunkinSprite.createSparrow(0, 0, "mechanics/Sign_Post_Mechanic");
		sign.setGraphicSize(Std.int(sign.width * 0.67));

		var playerNotesX = PlayState.instance.playerStrumline.x + PlayState.instance.playerStrumline.getXPos(3);
		var signX = playerNotesX - 400;

		switch (signType)
		{
			case 0:
				sign.animation.addByPrefix("sign", "Signature Stop Sign 1", 24, false);

				sign.x = signX;

				sign.angle = -90;
				sign.y = -300;
			case 1:
				sign.animation.addByPrefix("sign", "Signature Stop Sign 3", 24, false);

				sign.x = signX - 130;

				sign.angle = -90;
				if (PlayState.instance.playerStrumline.isDownscroll)
					sign.y = -395;
				else
					sign.y = -980;
			case 2:
				sign.animation.addByPrefix("sign", "Signature Stop Sign 4", 24, false);

				sign.x = signX - 420;

				sign.angle = -90;
				sign.y = -145;
		}

		sign.flipX = flipX;
		sign.animation.play("sign");
		sign.cameras = [PlayState.instance.camHUD];
    	sign.zIndex = 1500;

		signsArray.push(sign);

		PlayState.instance.add(sign);
		PlayState.instance.refresh();

		sign.animation.finishCallback = function(pog:String)
		{
			PlayState.instance.remove(sign);
		}
	}

	function leaveTheScreen()
	{
		for (sign in signsArray)
		{
			FlxTween.tween(sign, { y: 1000 }, 0.5, { ease: FlxEase.expoOut, onComplete: _ -> PlayState.instance.remove(sign)});
		}
	}
}
